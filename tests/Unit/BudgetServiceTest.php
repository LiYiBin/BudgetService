<?php

namespace Tests\Unit;

use App\BudgetService;
use PHPUnit\Framework\TestCase;
use \Mockery;

class BudgetServiceTest extends TestCase
{
    private $budgetService;
    private $budgetRepo;

    public function tearDown(): void
    {
        Mockery::close();
    }

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->budgetRepo = Mockery::mock('budgetRepo');
        $this->budgetService = new BudgetService($this->budgetRepo);
    }

    private function givenBudget($budget)
    {
        $this->budgetRepo->shouldReceive('getAll')
            ->andReturn($budget);
    }

    private function amountShouldBe($expected, $start, $end)
    {
        $this->assertEquals($expected, $this->budgetService->query($start, $end),);
    }

    public function test_date_illegal()
    {
        $this->amountShouldBe(0, new \DateTime('2010-05-01'), new \DateTime('2010-04-01'));
    }

    public function test_no_budget()
    {
        $this->givenBudget([]);
        $this->amountShouldBe(0, new \DateTime('2010-04-01'), new \DateTime('2010-05-01'));
    }

    public function test_one_entire_month()
    {
        $this->givenBudget(['202009' => 1000]);
        $this->amountShouldBe(1000, new \DateTime('2020-09-01'), new \DateTime('2020-09-30'));
    }

    public function test_two_entire_month()
    {
        $this->givenBudget(['202009' => 1000, '202010' => 1500]);
        $this->amountShouldBe(2500.00, new \DateTime('2020-09-01'), new \DateTime('2020-10-31'));
    }

    public function test_three_months()
    {
        $this->givenBudget(['202009' => 1000, '202010' => 1500, '202011' => 1200]);
        $this->amountShouldBe(3700, new \DateTime('2020-09-01'), new \DateTime('2020-11-30'));
    }

    public function test_one_day()
    {
        $this->givenBudget(['202009' => 300]);
        $this->amountShouldBe(10, new \DateTime('2020-09-01'), new \DateTime('2020-09-01'));
    }

    //    public function test_multi_days()
    //    {
    //        $this->givenBudget(['202009' => 300]);
    //
    //        $this->amountShouldBe(130.00, new \DateTime('2020-09-01'), new \DateTime('2020-09-13'));
    //    }
}
